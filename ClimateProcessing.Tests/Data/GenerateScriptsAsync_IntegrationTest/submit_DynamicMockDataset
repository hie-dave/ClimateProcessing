#!/usr/bin/env bash
# Job submission script for: DynamicMockDataset

# This script was automatically generated. Do not modify.

# Exit immediately if any command fails.
set -euo pipefail

mkdir -p "@#OUTPUT_DIRECTORY#@"

# Dictionary to track job IDs
declare -A JOB_IDS

# List to track all job IDs for cleanup dependency
ALL_JOBS=""

# Function to submit a job
submit_job() {
    local job_name="${1}"
    local script_path="${2}"
    shift 2
    local dependency_jobs=("$@")

    # Build dependency string if we have dependencies
    local deps=""
    if [ ${#dependency_jobs[@]} -gt 0 ]; then
        for dep_job in "${dependency_jobs[@]}"; do
            if [ -z "${dep_job}" ]; then
                continue
            fi
            if [ -z "${deps}" ]; then
                deps="${JOB_IDS[${dep_job}]}"
            else
                deps="${deps}:${JOB_IDS[${dep_job}]}"
            fi
        done
    fi

    if [ -z "${deps}" ]; then
        # No dependencies
        JOB_ID="$(qsub "${script_path}")"
    else
        # With dependencies
        JOB_ID="$(qsub -W depend=afterok:"${deps}" "${script_path}")"
    fi

    # Store the job ID
    JOB_IDS["${job_name}"]="${JOB_ID}"

    # Add to all jobs list
    if [ -z "${ALL_JOBS}" ]; then
        ALL_JOBS="${JOB_ID}"
    else
        ALL_JOBS="${ALL_JOBS}:${JOB_ID}"
    fi

    echo "Submitted job ${job_name}: ${JOB_ID}"
}

# Submit job: mergetime_huss_DynamicMockDataset
submit_job "mergetime_huss_DynamicMockDataset" "@#OUTPUT_DIRECTORY#@/scripts/mergetime_huss_DynamicMockDataset"

# Submit job: rechunk_huss_DynamicMockDataset
submit_job "rechunk_huss_DynamicMockDataset" "@#OUTPUT_DIRECTORY#@/scripts/rechunk_huss_DynamicMockDataset" "mergetime_huss_DynamicMockDataset"

# Submit job: mergetime_pr_DynamicMockDataset
submit_job "mergetime_pr_DynamicMockDataset" "@#OUTPUT_DIRECTORY#@/scripts/mergetime_pr_DynamicMockDataset"

# Submit job: rechunk_pr_DynamicMockDataset
submit_job "rechunk_pr_DynamicMockDataset" "@#OUTPUT_DIRECTORY#@/scripts/rechunk_pr_DynamicMockDataset" "mergetime_pr_DynamicMockDataset"

# Submit job: mergetime_ps_DynamicMockDataset
submit_job "mergetime_ps_DynamicMockDataset" "@#OUTPUT_DIRECTORY#@/scripts/mergetime_ps_DynamicMockDataset"

# Submit job: rechunk_ps_DynamicMockDataset
submit_job "rechunk_ps_DynamicMockDataset" "@#OUTPUT_DIRECTORY#@/scripts/rechunk_ps_DynamicMockDataset" "mergetime_ps_DynamicMockDataset"

# Submit job: mergetime_rsds_DynamicMockDataset
submit_job "mergetime_rsds_DynamicMockDataset" "@#OUTPUT_DIRECTORY#@/scripts/mergetime_rsds_DynamicMockDataset"

# Submit job: rechunk_rsds_DynamicMockDataset
submit_job "rechunk_rsds_DynamicMockDataset" "@#OUTPUT_DIRECTORY#@/scripts/rechunk_rsds_DynamicMockDataset" "mergetime_rsds_DynamicMockDataset"

# Submit job: mergetime_sfcWind_DynamicMockDataset
submit_job "mergetime_sfcWind_DynamicMockDataset" "@#OUTPUT_DIRECTORY#@/scripts/mergetime_sfcWind_DynamicMockDataset"

# Submit job: rechunk_sfcWind_DynamicMockDataset
submit_job "rechunk_sfcWind_DynamicMockDataset" "@#OUTPUT_DIRECTORY#@/scripts/rechunk_sfcWind_DynamicMockDataset" "mergetime_sfcWind_DynamicMockDataset"

# Submit job: mergetime_tas_DynamicMockDataset
submit_job "mergetime_tas_DynamicMockDataset" "@#OUTPUT_DIRECTORY#@/scripts/mergetime_tas_DynamicMockDataset"

# Submit job: rechunk_tas_DynamicMockDataset
submit_job "rechunk_tas_DynamicMockDataset" "@#OUTPUT_DIRECTORY#@/scripts/rechunk_tas_DynamicMockDataset" "mergetime_tas_DynamicMockDataset"

# Submit job: calc_vpd_DynamicMockDataset
submit_job "calc_vpd_DynamicMockDataset" "@#OUTPUT_DIRECTORY#@/scripts/calc_vpd_DynamicMockDataset" "mergetime_tas_DynamicMockDataset" "mergetime_huss_DynamicMockDataset" "mergetime_ps_DynamicMockDataset"

# Submit job: rechunk_vpd_DynamicMockDataset
submit_job "rechunk_vpd_DynamicMockDataset" "@#OUTPUT_DIRECTORY#@/scripts/rechunk_vpd_DynamicMockDataset" "calc_vpd_DynamicMockDataset"

# Submit cleanup script
JOB_ID="$(qsub -W depend=afterok:"${ALL_JOBS}" "@#OUTPUT_DIRECTORY#@/scripts/cleanup_DynamicMockDataset")"

echo "Job submission complete for dataset DynamicMockDataset. Final job ID: ${JOB_ID}"
